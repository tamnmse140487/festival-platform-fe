import { CheckCircle, Clock, Edit, Trophy, X } from "lucide-react";
import { FESTIVAL_STATUS, ORDER_STATUS } from "./constants";

export const getRoleDisplayName = (role) => {
  const roleNames = {
    Admin: "Qu·∫£n tr·ªã vi√™n",
    SchoolManager: "Qu·∫£n l√Ω tr∆∞·ªùng",
    Teacher: "Gi√°o vi√™n",
    Student: "H·ªçc sinh",
    Supplier: "Nh√† cung c·∫•p",
    guest: "Kh√°ch",
  };
  return roleNames[role] || "Ng∆∞·ªùi d√πng";
};

export const formatPrice = (price) => {
  return new Intl.NumberFormat("vi-VN", {
    style: "currency",
    currency: "VND",
  }).format(price);
};

export const formatNumber = (num) => {
  return new Intl.NumberFormat("vi-VN").format(num);
};

export const getStatusBadge = (status, type = "default") => {
  const statusConfigs = {
    festival: {
      draft: { label: "Nh√°p", class: "bg-gray-100 text-gray-800" },
      published: { label: "ƒê√£ c√¥ng b·ªë", class: "bg-green-100 text-green-800" },
      cancelled: { label: "ƒê√£ h·ªßy", class: "bg-red-100 text-red-800" },
    },
    approval: {
      pending: { label: "Ch·ªù duy·ªát", class: "bg-yellow-100 text-yellow-800" },
      approved: { label: "ƒê√£ duy·ªát", class: "bg-green-100 text-green-800" },
      rejected: { label: "ƒê√£ t·ª´ ch·ªëi", class: "bg-red-100 text-red-800" },
    },
    booth: {
      active: {
        label: "ƒêang ho·∫°t ƒë·ªông",
        class: "bg-purple-100 text-purple-800",
      },
      pending: { label: "Ch·ªù duy·ªát", class: "bg-yellow-100 text-yellow-800" },
      approved: { label: "ƒê√£ duy·ªát", class: "bg-green-100 text-green-800" },
      rejected: { label: "ƒê√£ t·ª´ ch·ªëi", class: "bg-red-100 text-red-800" },
    },
    menuItem: {
      active: { label: "Ho·∫°t ƒë·ªông", class: "bg-green-100 text-green-800" },
      inactive: {
        label: "Ng·ª´ng ho·∫°t ƒë·ªông",
        class: "bg-gray-100 text-gray-800",
      },
    },
    location: {
      true: { label: "ƒê√£ thu√™", class: "bg-red-100 text-red-800" },
      false: { label: "Tr·ªëng", class: "bg-green-100 text-green-800" },
    },
  };

  const config = statusConfigs[type]?.[status] || {
    label: status,
    class: "bg-gray-100 text-gray-800",
  };
  return (
    <span
      className={`px-2 py-1 rounded-full text-xs font-medium ${config.class}`}
    >
      {config.label}
    </span>
  );
};

export const calculateFestivalStats = (festival) => {
  const totalBooths =
    (festival.maxFoodBooths || 0) + (festival.maxBeverageBooths || 0);
  const registeredBooths =
    (festival.registeredFoodBooths || 0) +
    (festival.registeredBeverageBooths || 0);
  const availableBooths = totalBooths - registeredBooths;
  const occupancyRate =
    totalBooths > 0 ? Math.round((registeredBooths / totalBooths) * 100) : 0;

  return {
    totalBooths,
    registeredBooths,
    availableBooths,
    occupancyRate,
  };
};

export const getItemTypeLabel = (type) => {
  const types = {
    food: "ƒê·ªì ƒÉn",
    beverage: "ƒê·ªì u·ªëng",
    dessert: "Tr√°ng mi·ªáng",
    snack: "ƒê·ªì ƒÉn v·∫∑t",
  };
  return types[type] || type;
};

export const getItemTypeIcon = (type) => {
  const icons = {
    food: "üçΩÔ∏è",
    beverage: "ü•§",
    dessert: "üç∞",
    snack: "üçø",
  };
  return icons[type] || "üì¶";
};

export const getOrderStatusColor = (status) => {
  const colors = {
    [ORDER_STATUS.PENDING]: "bg-yellow-100 text-yellow-800",
    [ORDER_STATUS.PAID]: "bg-green-100 text-green-800",
    [ORDER_STATUS.COMPLETED]: "bg-green-100 text-green-800",
    [ORDER_STATUS.CANCELLED]: "bg-red-100 text-red-800",
  };
  return colors[status] || "bg-gray-100 text-gray-800";
};

export const getFestivalStatusBadge = (status) => {
    const badges = {
      [FESTIVAL_STATUS.DRAFT]: { label: 'B·∫£n nh√°p', class: 'bg-gray-100 text-gray-800', icon: <Edit size={16} /> },
      [FESTIVAL_STATUS.PUBLISHED]: { label: 'ƒê√£ c√¥ng b·ªë', class: 'bg-green-100 text-green-800', icon: <CheckCircle size={16} /> },
      [FESTIVAL_STATUS.ONGOING]: { label: 'ƒêang di·ªÖn ra', class: 'bg-blue-100 text-blue-800', icon: <Clock size={16} /> },
      [FESTIVAL_STATUS.COMPLETED]: { label: 'ƒê√£ k·∫øt th√∫c', class: 'bg-purple-100 text-purple-800', icon: <Trophy size={16} /> },
      [FESTIVAL_STATUS.CANCELLED]: { label: 'ƒê√£ h·ªßy', class: 'bg-red-100 text-red-800', icon: <X size={16} /> }
    };

    const badge = badges[status] || badges[FESTIVAL_STATUS.DRAFT];
    return (
      <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${badge.class}`}>
        {badge.icon}
        <span className="ml-1">{badge.label}</span>
      </span>
    );
  };